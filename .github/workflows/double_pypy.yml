name: Test pypy
on: [push]
jobs:
  run:
    name: Run
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-18.04, macos-latest, windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Check arch
      run: node -e "const os = require('os'); console.log(os.arch())"
    - name: PyPy version
      shell: pwsh
      run: |
        if($IsWindows) {
          ls C:\hostedtoolcache\windows\PyPy\3.6.12\x86\bin
        }
    - uses: dmitry-shibanov/setup-python@v-dmshib/add-support-for-pypy
      with:
        python-version: 'pypy-3.7-v7.3.3'
    - name: PyPy version
      shell: pwsh
      run: |
        if($IsWindows) {
          python --version
        } else {
          python --version
        }
    - name: Run simple code
      run: python -c 'import math; print(math.factorial(5))'
    - uses: dmitry-shibanov/setup-python@v-dmshib/add-support-for-pypy
      with:
        python-version: 'pypy-3.6-v7.3.3'
    - name: PyPy version
      shell: pwsh
      run: |
        if($IsWindows) {
          python --version
        } else {
          python --version
        }
    - name: Run simple code
      run: python -c 'import math; print(math.factorial(5))'
    - uses: dmitry-shibanov/setup-python@v-dmshib/add-support-for-pypy
      with:
        python-version: 'pypy-3.6-7.3.1b12312'
    - name: PyPy version
      shell: pwsh
      run: |
        if($IsWindows) {
          python --version
        } else {
          python --version
        }
    - name: Run simple code
      run: |
        pip install arrow
        python -c "import arrow; a = arrow.get('2013-05-11T21:23:58.970460+07:00'); print(a)"
