name: Test java
on: [push]
jobs:
  run:
    name: Run
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-18.04, macos-latest, windows-latest]
        version: [ '1.11.x', '1.12', '13.x', '11.0.x', '1.8.x', '1.8', '8.x', 'x' ]
        provider: ["adopOpenJdk", "zulu"]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      id: setupJava
      with:
        java-version: 8.x

    - run: echo "${{ toJson(steps.setupJava.outputs) }}"
      shell: bash
      name: output from setup-java
#     - uses: actions/setup-java@v1
#       with:
#         java-version: 1.8.x
    - uses: dmitry-shibanov/setup-java@start-work-providers-feature
      with:
        java-version: ${{ matrix.version }}
        provider: ${{ matrix.provider }}
    - name: Java version
      shell: pwsh
      run: java -version
#     - uses: actions/setup-java@v1
#       with:
#         java-version: 1.8.x
#     - uses: dmitry-shibanov/setup-java@start-work-providers-feature
#       with:
#         java-version: 11.x
#         provider: ${{ matrix.provider }}
#     - name: Java version
#       shell: pwsh
#       run: java -version
